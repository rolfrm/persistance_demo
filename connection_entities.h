// This file is auto generated by table_compiler
typedef struct _connection_entities{
  char ** column_names;
  char ** column_types;
  u64 count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const u64 * k1, const u64 * k2);
  const u64 sizes[2];

  u64 * connectionid;
  u32 * entity;
  mem_area * connectionid_area;
  mem_area * entity_area;
}connection_entities;

connection_entities * connection_entities_create(const char * optional_name);
void connection_entities_set(connection_entities * table, u64 connectionid, u32 entity);
void connection_entities_insert(connection_entities * table, u64 * connectionid, u32 * entity, u64 count);
void connection_entities_lookup(connection_entities * table, u64 * keys, u64 * out_indexes, u64 count);
void connection_entities_remove(connection_entities * table, u64 * keys, u64 key_count);
void connection_entities_get_refs(connection_entities * table, u64 * keys, u64 ** indexes, u64 count);
void connection_entities_clear(connection_entities * table);
void connection_entities_unset(connection_entities * table, u64 key);
bool connection_entities_try_get(connection_entities * table, u64 * connectionid, u32 * entity);
void connection_entities_print(connection_entities * table);
u64 connection_entities_iter(connection_entities * table, u64 * keys, size_t keycnt, u64 * optional_keys_out, u64 * indexes, u64 cnt, u64 * iterator);
