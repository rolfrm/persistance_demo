// This file is auto generated by table_compiler
typedef struct _traversal_time{
  char ** column_names;
  char ** column_types;
  u64 count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const traversal_time_key * k1, const traversal_time_key * k2);
  const u64 sizes[2];

  traversal_time_key * key;
  f32 * timeout;
  mem_area * key_area;
  mem_area * timeout_area;
}traversal_time;

traversal_time * traversal_time_create(const char * optional_name);
void traversal_time_set(traversal_time * table, traversal_time_key key, f32 timeout);
void traversal_time_insert(traversal_time * table, traversal_time_key * key, f32 * timeout, u64 count);
void traversal_time_lookup(traversal_time * table, traversal_time_key * keys, u64 * out_indexes, u64 count);
void traversal_time_remove(traversal_time * table, traversal_time_key * keys, u64 key_count);
void traversal_time_clear(traversal_time * table);
void traversal_time_unset(traversal_time * table, traversal_time_key key);
bool traversal_time_try_get(traversal_time * table, traversal_time_key * key, f32 * timeout);
void traversal_time_print(traversal_time * table);
u64 traversal_time_iter(traversal_time * table, traversal_time_key * keys, size_t keycnt, traversal_time_key * optional_keys_out, u64 * indexes, u64 cnt, u64 * iterator);
