// This file is auto generated by table_compiler
typedef struct _nr_ui_item{
  char ** column_names;
  char ** column_types;
  u64 count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const u32 * k1, const u32 * k2);
  const u64 sizes[2];

  u32 * key;
  vec2 * position;
  mem_area * key_area;
  mem_area * position_area;
}nr_ui_item;

nr_ui_item * nr_ui_item_create(const char * optional_name);
void nr_ui_item_set(nr_ui_item * table, u32 key, vec2 position);
void nr_ui_item_insert(nr_ui_item * table, u32 * key, vec2 * position, u64 count);
void nr_ui_item_lookup(nr_ui_item * table, u32 * keys, u64 * out_indexes, u64 count);
void nr_ui_item_remove(nr_ui_item * table, u32 * keys, u64 key_count);
void nr_ui_item_clear(nr_ui_item * table);
void nr_ui_item_unset(nr_ui_item * table, u32 key);
bool nr_ui_item_try_get(nr_ui_item * table, u32 * key, vec2 * position);
void nr_ui_item_print(nr_ui_item * table);
u64 nr_ui_item_iter(nr_ui_item * table, u32 * keys, size_t keycnt, u32 * optional_keys_out, u64 * indexes, u64 cnt, u64 * iterator);
