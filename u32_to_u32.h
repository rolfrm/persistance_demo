// This file is auto generated by table_compiler
typedef struct _u32_to_u32{
  char ** column_names;
  char ** column_types;
  u64 count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const u32 * k1, const u32 * k2);
  const u64 sizes[2];

  u32 * key;
  u32 * value;
  mem_area * key_area;
  mem_area * value_area;
}u32_to_u32;

u32_to_u32 * u32_to_u32_create(const char * optional_name);
void u32_to_u32_set(u32_to_u32 * table, u32 key, u32 value);
void u32_to_u32_insert(u32_to_u32 * table, u32 * key, u32 * value, u64 count);
void u32_to_u32_lookup(u32_to_u32 * table, u32 * keys, u64 * out_indexes, u64 count);
void u32_to_u32_remove(u32_to_u32 * table, u32 * keys, u64 key_count);
void u32_to_u32_clear(u32_to_u32 * table);
void u32_to_u32_unset(u32_to_u32 * table, u32 key);
bool u32_to_u32_try_get(u32_to_u32 * table, u32 * key, u32 * value);
void u32_to_u32_print(u32_to_u32 * table);
u64 u32_to_u32_iter(u32_to_u32 * table, u32 * keys, size_t keycnt, u32 * optional_keys_out, u64 * indexes, u64 cnt, u64 * iterator);
