// This file is auto generated by table_compiler
typedef struct _game_events{
  char ** column_names;
  char ** column_types;
  u64 count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const u32 * k1, const u32 * k2);
  const u64 sizes[2];

  u32 * id;
  game_event * event;
  mem_area * id_area;
  mem_area * event_area;
}game_events;

game_events * game_events_create(const char * optional_name);
void game_events_set(game_events * table, u32 id, game_event event);
void game_events_insert(game_events * table, u32 * id, game_event * event, u64 count);
void game_events_lookup(game_events * table, u32 * keys, u64 * out_indexes, u64 count);
void game_events_remove(game_events * table, u32 * keys, u64 key_count);
void game_events_get_refs(game_events * table, u32 * keys, u64 ** indexes, u64 count);
void game_events_clear(game_events * table);
void game_events_unset(game_events * table, u32 key);
bool game_events_try_get(game_events * table, u32 * id, game_event * event);
void game_events_print(game_events * table);
u64 game_events_iter(game_events * table, u32 * keys, size_t keycnt, u32 * optional_keys_out, u64 * indexes, u64 cnt, u64 * iterator);
